shopt -s nullglob

IFS=$':\n' read -r -a xdg_data_dirs <<<"${XDG_DATA_DIRS?:}"
dirs=("${xdg_data_dirs[@]/%//icons}")

add_icons() {
  while read -r line
  do
    workspaces=$(jq -Mc '.workspaces[]' <<<"$line" | while read -r workspace
    do
      windows=$(jq -Mc '.windows[]' <<<"$workspace" | while read -r window
      do
        class="$(jq -rM '.class' <<<"$window")"
        for dir in "${dirs[@]}"
        do
          for icon in "$dir"/hicolor/{scalable,64x64,128x128,256x256,48x48,32x32,16x16,512x512}/apps/*{"$class","${class@L}","${class@u}"}.{svg,png}
          do
            if [ -f "$icon" ]
            then
              window="$(icon="$icon" jq -Mc '. + { icon: env.icon }' <<<"$window")"
              break 2
            fi
          done
        done
        cat <<<"$window"
      done | jq -sMc '{ windows: . }')
      (cat <<<"$workspace"; cat <<<"$windows") | jq -sMc 'map(to_entries) | flatten | from_entries'
    done | jq -sMc '{ workspaces: . }')
    (cat <<<"$line"; cat <<<"$workspaces") | jq -sMc 'map(to_entries) | flatten | from_entries'
  done
}

get-info() {
  {
    echo '[
      {"workspace":{"id":1,"name":"einz"}},
      {"workspace":{"id":2,"name":"zwei"}},
      {"workspace":{"id":3,"name":"drei"}},
      {"workspace":{"id":4,"name":"vier"}},
      {"workspace":{"id":5,"name":"funf"}}
    ]'
    hyprctl clients -j
  } | jq \
      --argjson activewindow "$(hyprctl activewindow -j)" \
      --argjson activeworkspace "$(hyprctl activeworkspace -j)" \
      -sMc '
    {
      activewindow: $activewindow,
      activeworkspace: $activeworkspace,
      workspaces: [
        flatten
        | group_by(.workspace.id)
        | .[]
        | .[0].workspace + {
            windows: [
              .[]
              | select(.address and (.class | length > 0))
              | {
                class,
                title,
                address,
                active: (.address == $activewindow.address),
              }
              | select(if .class == "steam" then .title != "" else true end)
            ]
          }
        | select((.windows | any) or (.name | length > 0))
        | . + {
            active: (.id == $activeworkspace.id),
          }
      ]
    }
  ' | add_icons
}

prev=
info() {
  if new="$(get-info)" && [ "$prev" != "$new" ]
  then
    prev="$new"
    echo "$new"
  fi
}

info
SOCKET="UNIX-CONNECT:$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock"
socat -u "$SOCKET",forever - | while read -r; do
  info
  # Some events like closing windows fire before everything is updated,
  # check again after a little while :ferrisPensive:
  sleep 0.1
  info
done
